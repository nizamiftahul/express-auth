// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model c_user {
  id          Int       @id @default(autoincrement())
  email       String    @unique @db.VarChar(50)
  password    String    @db.VarChar(255)
  last_login  DateTime?
  is_active   Boolean   @default(false)
  is_deleted  Boolean   @default(false)
  activeToken String?
  resetToken  String?
  c_role_id   Int
  c_role      c_role    @relation(fields: [c_role_id], references: [id])

  created_by Int?
  created_at DateTime @default(now())
  updated_by Int?
  updated_at DateTime @updatedAt
}

model c_role {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar(50)

  created_by Int?
  created_at DateTime @default(now())
  updated_by Int?
  updated_at DateTime @updatedAt

  c_user            c_user[]
  c_role_permission c_role_permission[]
}

model c_permission {
  id                Int                 @id @default(autoincrement())
  name              String              @unique @db.VarChar(50)
  c_role_permission c_role_permission[]

  created_by Int?
  created_at DateTime @default(now())
  updated_by Int?
  updated_at DateTime @updatedAt
}

model c_role_permission {
  id Int @id @default(autoincrement())

  created_by Int?
  created_at DateTime @default(now())
  updated_by Int?
  updated_at DateTime @updatedAt

  c_permission    c_permission @relation(fields: [c_permission_id], references: [id])
  c_permission_id Int
  c_role          c_role       @relation(fields: [c_role_id], references: [id])
  c_role_id       Int

  @@unique([c_permission_id, c_role_id])
}
